export declare const walletRPC: {
    createnewaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    dumpwallet(params: any): Promise<import("axios").AxiosResponse<any>>;
    importaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    importpubkey(params: any): Promise<import("axios").AxiosResponse<any>>;
    renameaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    importwallet(params: any): Promise<import("axios").AxiosResponse<any>>;
    addmultisigaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    createmultisig(params: any): Promise<import("axios").AxiosResponse<any>>;
    dumpprivkey(params: any): Promise<import("axios").AxiosResponse<any>>;
    encryptwallet(params: any): Promise<import("axios").AxiosResponse<any>>;
    estimatefee(params: any): Promise<import("axios").AxiosResponse<any>>;
    estimatepriority(params: any): Promise<import("axios").AxiosResponse<any>>;
    getaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    getaccountaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    getaddressesbyaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    getbalance(params: any): Promise<import("axios").AxiosResponse<any>>;
    getbalances(params: any): Promise<import("axios").AxiosResponse<any>>;
    getnewaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    getrawchangeaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    getreceivedbyaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    getreceivedbyaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    gettransaction(params: any): Promise<import("axios").AxiosResponse<any>>;
    gettransactionlist(params: any): Promise<import("axios").AxiosResponse<any>>;
    getutxobyaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    importprivkey(params: any): Promise<import("axios").AxiosResponse<any>>;
    keypoolrefill(params: any): Promise<import("axios").AxiosResponse<any>>;
    listaccounts(params: any): Promise<import("axios").AxiosResponse<any>>;
    listaddressgroupings(params: any): Promise<import("axios").AxiosResponse<any>>;
    listlockunspent(params: any): Promise<import("axios").AxiosResponse<any>>;
    listreceivedbyaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    listreceivedbyaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    listsinceblock(params: any): Promise<import("axios").AxiosResponse<any>>;
    listtransactions(params: any): Promise<import("axios").AxiosResponse<any>>;
    listunspent(params: any): Promise<import("axios").AxiosResponse<any>>;
    lockunspent(params: any): Promise<import("axios").AxiosResponse<any>>;
    move(params: any): Promise<import("axios").AxiosResponse<any>>;
    sendfrom(params: any): Promise<import("axios").AxiosResponse<any>>;
    sendmany(params: any): Promise<import("axios").AxiosResponse<any>>;
    sendtoaddress(params: any): Promise<import("axios").AxiosResponse<any>>;
    setaccount(params: any): Promise<import("axios").AxiosResponse<any>>;
    settxfee(params: any): Promise<import("axios").AxiosResponse<any>>;
    signmessage(params: any): Promise<import("axios").AxiosResponse<any>>;
    signrawtransaction(params: any): Promise<import("axios").AxiosResponse<any>>;
    walletlock(params: any): Promise<import("axios").AxiosResponse<any>>;
    walletpassphrase(params: any): Promise<import("axios").AxiosResponse<any>>;
    walletpassphrasechange(params: any): Promise<import("axios").AxiosResponse<any>>;
    backupwallet(params: any): Promise<import("axios").AxiosResponse<any>>;
    getwalletinfo(params: any): Promise<import("axios").AxiosResponse<any>>;
    getbestblock(params: any): Promise<import("axios").AxiosResponse<any>>;
    getunconfirmedbalance(params: any): Promise<import("axios").AxiosResponse<any>>;
    listaddresstransactions(params: any): Promise<import("axios").AxiosResponse<any>>;
    listalltransactions(params: any): Promise<import("axios").AxiosResponse<any>>;
    recoveraddresses(params: any): Promise<import("axios").AxiosResponse<any>>;
    walletislocked(params: any): Promise<import("axios").AxiosResponse<any>>;
};
